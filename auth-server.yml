# Define the port where the UAA server would be running
server:
  port: 9999
  # Use different context-path to avoid session cookie overlapping
  context-path: /uaa
  use-forward-headers: false

# Define the Eureka server that handles service registration
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
    registerWithEureka: true
    fetchRegistry: true

# Define security
security:
  basic:
    enabled: false
  user:
    password: password
  ignored: /css/**,/js/**,/favicon.ico,/webjars/**
  sessions: never

logging:
  level.org.springframework.security: DEBUG

flyway:
    enabled: true

spring:
  profiles: docker
  rabbitmq:
    host: rabbitmq
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
  jpa:
    database: MYSQL
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.MySQLDialect
#      naming-strategy : org.hibernate.cfg.ImprovedNamingStrategy
    show-sql : true
    database-platform: org.hibernate.dialect.MySQL5Dialect
  datasource:
    url: jdbc:mysql://auth-server-db:3306/oauth?createDatabaseIfNotExist=true&useSSL=false
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.jdbc.Driver


#spring.boot.admin.url: http://admin:8088
management:
  security:
    enabled: false
